module.exports = {
  testEnvironment: "jest-environment-jsdom",
  collectCoverage: true,
  collectCoverageFrom: ["src/**/*.{ts,js,tsx,jsx}", "!build/**"],
  coveragePathIgnorePatterns: [
    "/node_modules",
    "<rootDir>/src/App.tsx",
    "<rootDir>/src/root.tsx",
    "/index.ts*",
    "/types.ts",
    "/*.d.ts",
    "/*.utils.ts",
    "/*.utils.tsx",
    "<rootDir>/src/shared/api",
    "<rootDir>/src/shared/translations",
    "<rootDir>/src/shared/types",
    "<rootDir>/src/shared/hooks",
    "<rootDir>/src/utils",
    "<rootDir>/src/services",
    "<rootDir>/src/shared/store",
    "<rootDir>/src/features/Auth/hooks",
    "<rootDir>/src/root.tsx",
    "<rootDir>/src/config"
  ],
  moduleDirectories: ["node_modules", "src"],
  setupFiles: ["jest-canvas-mock"],
  setupFilesAfterEnv: ["@testing-library/jest-dom"],
  transform: {
    "^.+\\.tsx?$": "babel-jest",
    "\\.[jt]sx?$": "babel-jest",
    ".+\\.(css|png|jpg|ttf|woff|woff2)$": "jest-transform-stub",
    "\\.svg$": "jest-transformer-svg",
  },
  globalSetup: "<rootDir>/config/tests/global-setup.js",
  moduleNameMapper: {
    "\\.(css|less)$": "identity-obj-proxy",
    "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":
      "<rootDir>/config/tests/fileMock.js",
  },
};
